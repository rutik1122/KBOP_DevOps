@model iBAS.Models.LoginVM

@{
    Layout = null;
}

<html data-bs-theme="light" lang="en-US" dir="ltr">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <script src="~/Scripts/jquery-3.6.0.min.js"></script>
    <script src="~/Scripts/aes.js"></script>

    <!-- ===============================================-->
    <!--    Document Title-->
    <!-- ===============================================-->
    <title>K-BOP | Kores Branch Operation Platform</title>
    <!-- ===============================================-->
    <!--    Favicons-->
    <!-- ===============================================-->
    @*<link rel="apple-touch-icon" sizes="180x180" href="~/vendors/assets/img/favicons/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="~/vendors/assets/img/favicons/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="~/vendors/assets/img/favicons/favicon-16x16.png">
        <link rel="shortcut icon" type="image/x-icon" href="~/vendors/assets/img/favicons/favicon.ico">*@
    @*<link rel="apple-touch-icon" sizes="180x180" href="~/vendors/assets/img/favicons/KoresLogo.png">
    <link rel="icon" type="image/png" sizes="32x32" href="~/vendors/assets/img/favicons/KoresLogo.png">
    <link rel="icon" type="image/png" sizes="16x16" href="~/vendors/assets/img/favicons/KoresLogo.png">*@
    <link rel="shortcut icon" type="image/x-icon" href="~/vendors/assets/img/favicons/KoresLogo.ico">
    <link rel="manifest" href="~/vendors/assets/img/favicons/manifest.json">
    <meta name="msapplication-TileImage" content="~/vendors/assets/img/favicons/mstile-150x150.png">
    <meta name="theme-color" content="#ffffff">
    <script src="~/vendors/assets/js/config.js"></script>
    <script src="~/vendors/simplebar/simplebar.min.js"></script>


    <!-- ===============================================-->
    <!--    Stylesheets-->
    <!-- ===============================================-->
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,500,600,700%7cPoppins:300,400,500,600,700,800,900&amp;display=swap"
          rel="stylesheet">
    <link href="~/vendors/simplebar/simplebar.min.css" rel="stylesheet">
    <link href="~/vendors/assets/css/theme-rtl.min.css" rel="stylesheet" id="style-rtl">
    <link href="~/vendors/assets/css/theme.min.css" rel="stylesheet" id="style-default">
    <link href="~/vendors/assets/css/user-rtl.min.css" rel="stylesheet" id="user-style-rtl">
    <link href="~/vendors/assets/css/user.min.css" rel="stylesheet" id="user-style-default">
</head>

<body>

    <input id="errormsg" value="" hidden />

    <!-- ===============================================-->
    <!--    Main Content-->
    <!-- ===============================================-->
    <main class="main" id="top">
        <div class="container-fluid">
            <div class="row min-vh-100 flex-center g-0">
                <div class="col-lg-4 col-xxl-5 py-3 position-relative">
                    <div class="card overflow-hidden z-1">
                        <div class="card-body p-0">
                            <div class="row g-0 h-100">
                                <!--<div class="col-md-5 text-center bg-card-gradient">
                                    <div class="position-relative p-4 pt-md-5 pb-md-7" data-bs-theme="light">
                                        <div class="bg-holder bg-auth-card-shape"
                                             style="background-image:url(~/vendors/assets/img/icons/spot-illustrations/half-circle.png);">
                                        </div>-->
                                        <!--/.bg-holder-->

                                        <!--<div class="z-1 position-relative">
                                            <a class="link-light mb-5 font-sans-serif fs-4 d-inline-block fw-bolder" href="~/index.html">
                                                <img src="~/vendors/assets/img/kores_logo-bg_white.png" alt="" width="180" height="auto">
                                            </a>
                                            <p class="opacity-75 text-white">
                                                Kores is a brand of school stationery and office products best
                                                known for solid glue sticks, dry correction tapes and Kolores coloured pencils. Kores was
                                                founded in 1887 by Wilhelm Koreska, the great-grandfather of Clemens Koreska, the current
                                                president of Kores Group.
                                            </p>
                                        </div>
                                    </div>
                                </div>-->
                                <div class="col-md-12 d-flex flex-center">
                                    <div class="p-4 p-md-5 flex-grow-1">
                                        <div class="z-1 position-relative">
                                            <a class="link-light mb-5 font-sans-serif fs-4 d-inline-block fw-bolder" href="~/index.html">
                                                <img src="~/vendors/assets/img/kores_logo-bg_white.png" alt="" width="180" height="auto">
                                            </a>
                                        </div>
                                        <div class="row flex-between-center">
                                            <div class="col-auto">
                                                <h3 class="text-primary">K-BOP Login</h3>
                                            </div>
                                        </div>
                                        @using (Html.BeginForm("LoginiBAS", "Home", FormMethod.Post))
                                        {
                                            <input name="sess" id="sess" value="@Session["sessionVal"].ToString()" hidden />
                                            <input name="yes1" id="yes1" value="" hidden />
                                            <input name="yes2" id="yes2" value="" hidden />

                                            <form>
                                                <div class="mb-3">
                                                    <label class="form-label" for="card-email">User ID</label>
                                                    @*<input class="form-control" id="card-email" type="email" />*@
                                                    @Html.TextBoxFor(m => m.loginid, new { autofocus = "autofocus", placeholder = "loginid", @class = "form-control", @maxlength = 30, @autocomplete = "off" })
                                                </div>
                                                <div class="mb-3">
                                                    <div class="d-flex justify-content-between">
                                                        <label class="form-label" for="card-password">Password</label>
                                                    </div>
                                                    @*<input class="form-control" id="card-password" type="password" />*@
                                                    @Html.PasswordFor(m => m.password, new { placeholder = "Password", @class = "form-control", @autocomplete = "off" })
                                                </div>
                                                <div id="div_btn_submit" class="mb-3">
                                                    <button id="btn_submit" class="btn btn-primary d-block w-100 mt-3" type="submit" name="submit" onclick="return (LoginVal())" disabled>Log in</button>
                                                </div>
                                                <div>
                                                    <div id="div_error_msg" class="my-3">
                                                        <label id="lbl_error_msg" class="form-label bg-danger text-white text-center p-2 d-block w-100 ">

                                                        </label>
                                                    </div>

                                                    @if (TempData["ErrorMessage"] != null)
                                                    {
                                                        <label class="form-label bg-danger text-white text-center p-2 d-block w-100 ">
                                                            <b>@TempData["ErrorMessage"].ToString()</b>
                                                        </label>
                                                    }
                                                </div>
                                            </form>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
    <!-- ===============================================-->
    <!--    End of Main Content-->
    <!-- ===============================================-->
    <!-- ===============================================-->
    <!--    JavaScripts-->
    <!-- ===============================================-->
    <script src="~/vendors/popper/popper.min.js"></script>
    <script src="~/vendors/bootstrap/bootstrap.min.js"></script>
    <script src="~/vendors/anchorjs/anchor.min.js"></script>
    <script src="~/vendors/is/is.min.js"></script>
    <script src="~/vendors/fontawesome/all.min.js"></script>
    <script src="~/vendors/lodash/lodash.min.js"></script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=window.scroll"></script>
    <script src="~/vendors/list.js/list.min.js"></script>
    <script src="~/vendors/assets/js/theme.js"></script>

</body>

</html>


<script type="text/javascript">

    $("#div_error_msg").hide();
    $("#div_btn_submit").hide();

    $(document).ready(function () {
        /*$("#div_error_msg").hide();*/
        $("#div_btn_submit").show();
        document.getElementById("btn_submit").disabled = false;
    });

    function LoginVal() {

        $("#div_error_msg").hide();

        if (document.getElementById("loginid").value == null || document.getElementById("loginid").value == "") {
            $("#div_error_msg").show();
            document.getElementById("lbl_error_msg").innerHTML = "Enter Username!";
            document.getElementById("loginid").focus();
            return false;
        }
        else if (document.getElementById("password").value == null || document.getElementById("password").value == "") {
            $("#div_error_msg").show();
            document.getElementById("lbl_error_msg").innerHTML = "Enter Password!";
            document.getElementById("password").focus();
            return false;
        }
        else {
            //debugger;
            var login = document.getElementById("loginid").value;
            var pass = document.getElementById("password").value;
            var s = document.getElementById("sess").value;

            var key = CryptoJS.enc.Utf8.parse(document.getElementById("sess").value);
            var iv = CryptoJS.enc.Utf8.parse(document.getElementById("sess").value);

            var encryptedLogin = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(login), key, { keySize: 128 / 8, iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
            document.getElementById("loginid").value = "";
            document.getElementById("yes1").value = encryptedLogin;

            var encryptedPassword = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(pass), key, { keySize: 128 / 8, iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
            document.getElementById("password").value = "";
            document.getElementById("yes2").value = encryptedPassword;

            //getLocalIPAddress();
            //debugger;

            //var ipval = document.getElementById("yes3").value;
            //var encryptedIp = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(pass), key, { keySize: 128 / 8, iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
            //document.getElementById("yes3").value = encryptedIp;

            //debugger;

            return true;

        }
    }

    //function getLocalIPAddress() {
    //    debugger;

    //    // Create a temporary RTCPeerConnection object
    //    const pc = new RTCPeerConnection();

    //    // Create a data channel to trigger ICE candidate gathering
    //    pc.createDataChannel('');

    //    // Event handler for ICE candidate gathering
    //    pc.onicecandidate = function (e) {
    //        if (e.candidate) {
    //            debugger;
    //            // Extract the IP address from the candidate
    //            const ipAddress = extractIPAddress(e.candidate.candidate);
    //            //document.getElementById('localIP').textContent = ipAddress;
    //            document.getElementById('yes3').value = ipAddress;

    //            // Close the connection as we don't need it anymore
    //            pc.close();
    //        }
    //    };

    //    // Create an offer to trigger ICE candidate gathering
    //    pc.createOffer().then(
    //        function (offer) {
    //            pc.setLocalDescription(offer);
    //        },
    //        function (error) {
    //            console.error('Error creating offer:', error);
    //        }
    //    );
    //}

    //function extractIPAddress(candidate) {
    //    const ipAddressPattern = /(?:\d{1,3}\.){3}\d{1,3}/;
    //    const ipAddressMatches = candidate.match(ipAddressPattern);
    //    return ipAddressMatches ? ipAddressMatches[0] : 'Unknown';
    //}

</script>

@*@if (TempData["ErrorMessage"] != null)
    {

        <script type="text/javascript">

            $("#div_error_msg").show();
            alert("ureytore");

        </script>

    }*@